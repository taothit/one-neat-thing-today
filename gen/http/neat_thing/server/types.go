// Code generated by goa v3.0.2, DO NOT EDIT.
//
// neatThing HTTP server types
//
// Command:
// $ goa gen github.com/taothit/one-neat-thing-today/design

package server

import (
	neatthing "github.com/taothit/one-neat-thing-today/gen/neat_thing"
)

// NeatThingTodayResponseBody is the type of the "neatThing" service
// "neatThingToday" endpoint HTTP response body.
type NeatThingTodayResponseBody struct {
	// The neat thing
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// What the neat thing is
	Definition *string `form:"definition,omitempty" json:"definition,omitempty" xml:"definition,omitempty"`
	// Illustrative link for the neat thing
	Link *string `form:"link,omitempty" json:"link,omitempty" xml:"link,omitempty"`
	// When this was a neat thing
	Date         *string  `form:"date,omitempty" json:"date,omitempty" xml:"date,omitempty"`
	Bibliography []string `form:"bibliography,omitempty" json:"bibliography,omitempty" xml:"bibliography,omitempty"`
}

// NewNeatThingTodayResponseBody builds the HTTP response body from the result
// of the "neatThingToday" endpoint of the "neatThing" service.
func NewNeatThingTodayResponseBody(res *neatthing.NeatThing) *NeatThingTodayResponseBody {
	body := &NeatThingTodayResponseBody{
		Name:       res.Name,
		Definition: res.Definition,
		Link:       res.Link,
		Date:       res.Date,
	}
	if res.Bibliography != nil {
		body.Bibliography = make([]string, len(res.Bibliography))
		for i, val := range res.Bibliography {
			body.Bibliography[i] = val
		}
	}
	return body
}
